{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Duc\\\\Documents\\\\mern-stack-example-main\\\\mern-stack-example-main\\\\mern\\\\client\\\\src\\\\components\\\\edit.js\";\nimport React, { Component } from \"react\"; // This will require to npm install axios\n\nimport axios from \"axios\";\nimport { withRouter } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Edit extends Component {\n  // This is the constructor that stores the data.\n  constructor(props) {\n    super(props);\n    this.onChangePersonName = this.onChangePersonName.bind(this);\n    this.onChangePersonPosition = this.onChangePersonPosition.bind(this);\n    this.onChangePersonLevel = this.onChangePersonLevel.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      person_name: \"\",\n      person_position: \"\",\n      person_level: \"\",\n      records: []\n    };\n  } // This will get the record based on the id from the database.\n\n\n  componentDidMount() {\n    let id = this.props.match.params.id;\n    console.log(id);\n    let url = \"http://localhost:3000/record/\" + id;\n    console.log(url);\n    axios.get(url).then(response => {\n      console.log(response.data);\n      this.setState({\n        person_name: response.data.person_name,\n        person_position: response.data.person_position,\n        person_level: response.data.person_level\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  } // These methods will update the state properties.\n\n\n  onChangePersonName(e) {\n    this.setState({\n      person_name: e.target.value\n    });\n  }\n\n  onChangePersonPosition(e) {\n    this.setState({\n      person_position: e.target.value\n    });\n  }\n\n  onChangePersonLevel(e) {\n    this.setState({\n      person_level: e.target.value\n    });\n  } // This function will handle the submission.\n\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newEditedperson = {\n      person_name: this.state.person_name,\n      person_position: this.state.person_position,\n      person_level: this.state.person_level\n    };\n    console.log(newEditedperson); // This will send a post request to update the data in the database.\n\n    axios.post(\"http://localhost:3000/update/\" + this.props.match.params.id, newEditedperson).then(res => console.log(res.data));\n    this.props.history.push(\"/\");\n  } // This following section will display the update-form that takes the input from the user to update the data.\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        align: \"center\",\n        children: \"Update Record\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Person's Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: this.state.person_name,\n            onChange: this.onChangePersonName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Position: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: this.state.person_position,\n            onChange: this.onChangePersonPosition\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-check form-check-inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-check-input\",\n              type: \"radio\",\n              name: \"priorityOptions\",\n              id: \"priorityLow\",\n              value: \"Intern\",\n              checked: this.state.person_level === \"Intern\",\n              onChange: this.onChangePersonLevel\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-check-label\",\n              children: \"Intern\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-check form-check-inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-check-input\",\n              type: \"radio\",\n              name: \"priorityOptions\",\n              id: \"priorityMedium\",\n              value: \"Junior\",\n              checked: this.state.person_level === \"Junior\",\n              onChange: this.onChangePersonLevel\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-check-label\",\n              children: \"Junior\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-check form-check-inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-check-input\",\n              type: \"radio\",\n              name: \"priorityOptions\",\n              id: \"priorityHigh\",\n              value: \"Senior\",\n              checked: this.state.person_level === \"Senior\",\n              onChange: this.onChangePersonLevel\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-check-label\",\n              children: \"Senior\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Update Record\",\n            className: \"btn btn-primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n  }\n\n} // You can get access to the history object's properties and the closest <Route>'s match via the withRouter\n// higher-order component. This makes it easier for us to edit our records.\n\n\nexport default _c = withRouter(Edit);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["C:/Users/Duc/Documents/mern-stack-example-main/mern-stack-example-main/mern/client/src/components/edit.js"],"names":["React","Component","axios","withRouter","Edit","constructor","props","onChangePersonName","bind","onChangePersonPosition","onChangePersonLevel","onSubmit","state","person_name","person_position","person_level","records","componentDidMount","id","match","params","console","log","url","get","then","response","data","setState","catch","error","e","target","value","preventDefault","newEditedperson","post","res","history","push","render"],"mappings":"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","sourcesContent":["import React,  {Component}  from \"react\";\n// This will require to npm install axios\nimport axios from \"axios\";\nimport { withRouter } from \"react-router\";\n\nclass Edit extends Component {\n  // This is the constructor that stores the data.\n  constructor(props) {\n    super(props);\n\n    this.onChangePersonName = this.onChangePersonName.bind(this);\n    this.onChangePersonPosition = this.onChangePersonPosition.bind(this);\n    this.onChangePersonLevel = this.onChangePersonLevel.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      person_name: \"\",\n      person_position: \"\",\n      person_level: \"\",\n      records: [],\n    };\n  }\n  // This will get the record based on the id from the database.\n  componentDidMount() {\n    let id = this.props.match.params.id;\n    console.log(id);\n    let url = \"http://localhost:3000/record/\" + id;\n    console.log(url);\n    axios\n      .get(url)\n      .then((response) => {\n        console.log(response.data);\n        this.setState({\n          person_name: response.data.person_name,\n          person_position: response.data.person_position,\n          person_level: response.data.person_level,\n        });\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  // These methods will update the state properties.\n  onChangePersonName(e) {\n    this.setState({\n      person_name: e.target.value,\n    });\n  }\n\n  onChangePersonPosition(e) {\n    this.setState({\n      person_position: e.target.value,\n    });\n  }\n\n  onChangePersonLevel(e) {\n    this.setState({\n      person_level: e.target.value,\n    });\n  }\n\n  // This function will handle the submission.\n  onSubmit(e) {\n    e.preventDefault();\n    const newEditedperson = {\n      person_name: this.state.person_name,\n      person_position: this.state.person_position,\n      person_level: this.state.person_level,\n    };\n    console.log(newEditedperson);\n\n    // This will send a post request to update the data in the database.\n    axios\n      .post(\n        \"http://localhost:3000/update/\" + this.props.match.params.id,\n        newEditedperson\n      )\n      .then((res) => console.log(res.data));\n\n    this.props.history.push(\"/\");\n  }\n\n  // This following section will display the update-form that takes the input from the user to update the data.\n  render() {\n    return (\n      <div>\n        <h3 align=\"center\">Update Record</h3>\n        <form onSubmit={this.onSubmit}>\n          <div className=\"form-group\">\n            <label>Person's Name: </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.person_name}\n              onChange={this.onChangePersonName}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Position: </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.person_position}\n              onChange={this.onChangePersonPosition}\n            />\n          </div>\n          <div className=\"form-group\">\n            <div className=\"form-check form-check-inline\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                name=\"priorityOptions\"\n                id=\"priorityLow\"\n                value=\"Intern\"\n                checked={this.state.person_level === \"Intern\"}\n                onChange={this.onChangePersonLevel}\n              />\n              <label className=\"form-check-label\">Intern</label>\n            </div>\n            <div className=\"form-check form-check-inline\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                name=\"priorityOptions\"\n                id=\"priorityMedium\"\n                value=\"Junior\"\n                checked={this.state.person_level === \"Junior\"}\n                onChange={this.onChangePersonLevel}\n              />\n              <label className=\"form-check-label\">Junior</label>\n            </div>\n            <div className=\"form-check form-check-inline\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                name=\"priorityOptions\"\n                id=\"priorityHigh\"\n                value=\"Senior\"\n                checked={this.state.person_level === \"Senior\"}\n                onChange={this.onChangePersonLevel}\n              />\n              <label className=\"form-check-label\">Senior</label>\n            </div>\n          </div>\n          <br />\n\n          <div className=\"form-group\">\n            <input\n              type=\"submit\"\n              value=\"Update Record\"\n              className=\"btn btn-primary\"\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\n// You can get access to the history object's properties and the closest <Route>'s match via the withRouter\n// higher-order component. This makes it easier for us to edit our records.\n\nexport default withRouter(Edit);\n"]},"metadata":{},"sourceType":"module"}